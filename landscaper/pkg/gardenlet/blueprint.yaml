apiVersion: landscaper.gardener.cloud/v1alpha1
kind: Blueprint
jsonSchema: "https://json-schema.org/draft/2019-09/schema" # required
imports:
  - name: seedCluster
    targetType: landscaper.gardener.cloud/kubernetes-cluster

  - name: gardenCluster
    targetType: landscaper.gardener.cloud/kubernetes-cluster

  - name: seedBackupCredentials
    required: false
    schema:
      type: object
      description: "provider specific credentials with varying properties"

  - name: imageVectorOverwrite
    required: false
    schema:
      type: object
      description: "image vector for the gardenlet. The type (internal) is defined in `pkg/utils/imagevector/types.go`"

  - name: componentImageVectorOverwrites
    required: false
    schema:
      type: object
      description: "image vector for other components deployed by the gardenlet. The type (internal) is defined in `pkg/utils/imagevector/types.go`"

  - name: deploymentConfiguration
    required: false
    schema:
      type: object
      description: "configuration for the gardenlet deployment in the Seed cluster."
      properties:
        replicaCount:
          schema:
            type: number
            description: "replicaCount field to override the default value"
        revisionHistoryLimit:
          schema:
            type: number
            description: "RevisionHistoryLimit field to override the default value"
        serviceAccountName:
          schema:
            type: string
        resources:
          schema:
            type: object
            description: "resource requests and limits to override the default values. The type is defined in k8s.io/api/core/v1 `ResourceRequirements`"
            properties:
              requests:
                type: object
                properties:
                  cpu:
                    type: string
                  memory:
                    type: string
              limits:
                type: object
                properties:
                  cpu:
                    type: string
                  memory:
                    type: string
        podLabels:
          schema:
            type: object
            description: "additional gardenlet pod labels. Defined as `map[string]string`"
        podAnnotations:
          schema:
            type: object
            description: "additional gardenlet pod annotations. Defined as `map[string]string`"
        additionalVolumes:
          schema:
            type: array
            description: "additional volumes for the gardenlet deployment. The type is defined in k8s.io/api/core/v1 `Volume`"
            items:
              type: object
        additionalVolumeMounts:
          schema:
            type: array
            description: "additional volume mounts for the gardenlet deployment. The type is defined in k8s.io/api/core/v1 `VolumeMount`"
            items:
              type: object
        vpa:
          schema:
            type: bool
            description: "whether to deploy a `VerticalPodAutoscaler` resource for the gardenlet."

  - name: componentConfiguration
    schema:
      description: "component configuration for the Gardenlet. Please check in the gardener/gardener repository in example/20-componentconfig-gardenlet.yaml for what can be configured here"
      type: object

# For what can be referenced in the deployExecutions, please see:
# https://github.com/gardener/landscaper/blob/master/docs/usage/Blueprints.md
deployExecutions:
  - name: default
    type: GoTemplate
    template: |
      deployItems:
      - name: deploy
        type: landscaper.gardener.cloud/container
        config:
          apiVersion: container.deployer.landscaper.gardener.cloud/v1alpha1
          kind: ProviderConfiguration
          blueprint:
      {{ toYaml .blueprint | indent 6 }}

          componentDescriptor:
      {{ toYaml .componentDescriptorDef | indent 6 }}

          importValues:
            # the import configuration of the Gardenlet landscaper
            apiVersion: gardenlet.gardener.landscaper.gardener.cloud/v1alpha1
            kind: Imports
      {{ toYaml .imports | indent 6 }}

          {{ $resource := getResource .cd "name" "gardenlet-landscaper" }}
          image: {{ $resource.access.imageReference }}
