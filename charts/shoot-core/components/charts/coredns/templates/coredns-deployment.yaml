apiVersion: {{ include "deploymentversion" . }}
kind: Deployment
metadata:
  name: coredns
  namespace: kube-system
  labels:
    origin: gardener
    gardener.cloud/role: system-component
    k8s-app: kube-dns
spec:
  revisionHistoryLimit: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      k8s-app: kube-dns
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
      labels:
        origin: gardener
        gardener.cloud/role: system-component
        k8s-app: kube-dns
      # we won't be using the checksum of the configmap since coredns provides the "reload" plugins that does the reload if config changes.
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: k8s-app
                      operator: In
                      values:
                        - kube-dns
      priorityClassName: system-cluster-critical
      nodeSelector:
        worker.gardener.cloud/system-components: "true"
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: coredns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      containers:
      - name: coredns
        image: {{ index .Values.images "coredns" }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.deployment.spec.containers.imagePullPolicy }}
        args:
        - -conf
        - /etc/coredns/Corefile
        {{- if .Values.kubeAPIServerHost }}
        env:
        - name: KUBERNETES_SERVICE_HOST
          value: {{ .Values.kubeAPIServerHost}}
        {{- end }}
        {{- if .Values.deployment.spec.containers.resources }}
        resources:
{{ .Values.deployment.spec.containers.resources | toYaml | trimSuffix "\n"| indent 10 }}
        {{- end}}
        volumeMounts:
        - name: config-volume
          mountPath: /etc/coredns
          readOnly: true
        - mountPath: /etc/coredns/custom
          name: custom-config-volume
          readOnly: true
        ports:
        - containerPort: {{ .Values.deployment.spec.containers.ports.dns }}
          name: dns-udp
          protocol: UDP
        - containerPort: {{ .Values.deployment.spec.containers.ports.dns }}
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
      dnsPolicy: Default
      volumes:
        - name: config-volume
          configMap:
            name: coredns
            items:
            - key: Corefile
              path: Corefile
        - name: custom-config-volume
          configMap:
            defaultMode: 420
            name: coredns-custom
            optional: true
