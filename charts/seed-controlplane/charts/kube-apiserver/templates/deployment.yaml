apiVersion: {{ include "deploymentversion" . }}
kind: Deployment
metadata:
  name: kube-apiserver
  namespace: {{ .Release.Namespace }}
  labels:
    gardener.cloud/role: controlplane
    app: kubernetes
    role: apiserver
{{- if .Values.sni.enabled }}
    core.gardener.cloud/apiserver-exposure: gardener-managed
{{- end }}
spec:
  minReadySeconds: 30
  revisionHistoryLimit: 1
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: kubernetes
      role: apiserver
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        {{- if .Values.serviceAccountConfig }}
        {{- if .Values.serviceAccountConfig.signingKey}}
        checksum/service-account-signing-key: {{ include ( print $.Template.BasePath "/secret-service-account-signing-key.yaml") . | sha256sum }}
        {{- end }}
        {{- end }}
        checksum/configmap-audit-policy: {{ include (print $.Template.BasePath "/configmap-audit-policy.yaml") . | sha256sum }}
        checksum/secret-oidc-cabundle: {{ include (print $.Template.BasePath "/secret-oidc-ca.yaml") . | sha256sum }}
        checksum/configmap-admission-config: {{ include (print $.Template.BasePath "/configmap-admission-config.yaml") . | sha256sum }}
        {{- if or .Values.konnectivityTunnel.enabled .Values.reversedVPN.enabled }}
        checksum/egress-selection-config: {{ include (print $.Template.BasePath "/configmap-egress-selection.yaml") . | sha256sum }}
        {{- end}}
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        gardener.cloud/role: controlplane
        garden.sapcloud.io/role: controlplane
        app: kubernetes
        role: apiserver
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-public-networks: allowed
        networking.gardener.cloud/to-private-networks: allowed
        networking.gardener.cloud/to-shoot-networks: allowed
        networking.gardener.cloud/from-prometheus: allowed
    spec:
      {{- if and .Values.konnectivityTunnel.enabled (not .Values.sni.enabled) }}
      serviceAccountName: kube-apiserver
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - kubernetes
                  - key: role
                    operator: In
                    values:
                    - apiserver
      priorityClassName: {{ .Values.priorityClassName }}
      {{- if and (not .Values.konnectivityTunnel.enabled) (not .Values.reversedVPN.enabled)}}
      initContainers:
      - name: set-iptable-rules
        image: {{ index .Values.images "alpine-iptables" }}
        command: ['/bin/sh', '-c', 'iptables -A INPUT -i tun0 -p icmp -j ACCEPT && iptables -A INPUT -i tun0 -m state --state NEW -j DROP']
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
        volumeMounts:
        - name: modules
          mountPath: /lib/modules
      {{- end }}
      containers:
      - name: kube-apiserver
        image: {{ index .Values.images "kube-apiserver" }}
        imagePullPolicy: IfNotPresent
        command:
        {{- if semverCompare "< 1.17" .Values.kubernetesVersion }}
        - /hyperkube
        - kube-apiserver
        {{- else }}
        - /usr/local/bin/kube-apiserver
        {{- end }}
        {{- if or .Values.konnectivityTunnel.enabled .Values.reversedVPN.enabled }}
        - --egress-selector-config-file=/etc/kubernetes/egress/egress-selector-configuration.yaml
        {{- end}}
        - --enable-admission-plugins={{ include "kube-apiserver.admissionPlugins" . | trimSuffix "," }}
        - --admission-control-config-file={{ include "kube-apiserver.admissionPluginConfigFileDir" . }}/admission-configuration.yaml
        - --allow-privileged=true
        - --anonymous-auth=false
        - --audit-log-path=/var/lib/audit.log
        - --audit-policy-file=/etc/kubernetes/audit/audit-policy.yaml
        - --audit-log-maxsize=100
        - --audit-log-maxbackup=5
        - --authorization-mode=Node,RBAC
        {{- if .Values.sni.enabled }}
        - --advertise-address={{ .Values.sni.advertiseIP }}
        {{- end }}
        {{- if .Values.enableBasicAuthentication }}
        - --basic-auth-file=/srv/kubernetes/auth/basic_auth.csv
        {{- end }}
        - --client-ca-file=/srv/kubernetes/ca/ca.crt
        - --enable-aggregator-routing=true
        - --enable-bootstrap-token-auth=true
        {{- include "kube-apiserver.watchCacheSizes" . | indent 8 }}
        - --http2-max-streams-per-connection=1000
        - --etcd-cafile=/srv/kubernetes/etcd/ca/ca.crt
        - --etcd-certfile=/srv/kubernetes/etcd/client/tls.crt
        - --etcd-keyfile=/srv/kubernetes/etcd/client/tls.key
        - --etcd-servers=https://etcd-main-client:{{ .Values.etcdServicePort }}
        - --etcd-servers-overrides=/events#https://etcd-events-client:{{ .Values.etcdServicePort }}
        {{- if .Values.enableEtcdEncryption }}
        - --encryption-provider-config=/etc/kubernetes/etcd-encryption-secret/encryption-configuration.yaml
        {{- end }}
        {{- include "kube-apiserver.featureGates" . | trimSuffix "," | indent 8 }}
        - --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP
        - --kubelet-client-certificate=/srv/kubernetes/apiserver-kubelet/kube-apiserver-kubelet.crt
        - --kubelet-client-key=/srv/kubernetes/apiserver-kubelet/kube-apiserver-kubelet.key
        - --insecure-port=0
        {{- include "kube-apiserver.oidcConfig" . | indent 8 }}
        {{- if semverCompare ">= 1.16" .Values.kubernetesVersion }}
        - --livez-grace-period=1m
        {{- end }}
        {{- if .Values.maxNonMutatingRequestsInflight }}
        - --max-requests-inflight={{ .Values.maxNonMutatingRequestsInflight }}
        {{- end }}
        {{- if .Values.maxMutatingRequestsInflight }}
        - --max-mutating-requests-inflight={{ .Values.maxMutatingRequestsInflight }}
        {{- end }}
        - --profiling=false
        - --proxy-client-cert-file=/srv/kubernetes/aggregator/kube-aggregator.crt
        - --proxy-client-key-file=/srv/kubernetes/aggregator/kube-aggregator.key
        - --requestheader-client-ca-file=/srv/kubernetes/ca-front-proxy/ca.crt
        - --requestheader-extra-headers-prefix=X-Remote-Extra-
        - --requestheader-group-headers=X-Remote-Group
        - --requestheader-username-headers=X-Remote-User
        {{- include "kube-apiserver.runtimeConfig" . | trimSuffix "," | indent 8 }}
        - --secure-port={{ required ".securePort is required" .Values.securePort }}
        - --service-cluster-ip-range={{ .Values.shootNetworks.services }}
        - --service-account-key-file=/srv/kubernetes/service-account-key/id_rsa
        {{- if semverCompare ">= 1.16" .Values.kubernetesVersion }}
        - --shutdown-delay-duration=15s
        {{- end }}
        - --token-auth-file=/srv/kubernetes/token/static_tokens.csv
        - --tls-cert-file=/srv/kubernetes/apiserver/kube-apiserver.crt
        - --tls-private-key-file=/srv/kubernetes/apiserver/kube-apiserver.key
        - --tls-cipher-suites={{ include "kubernetes.tlsCipherSuites" . | replace "\n" "," | trimPrefix "," }}
        {{- include "kube-apiserver.apiAudiences" . | indent 8 }}
        {{- include "kube-apiserver.serviceAccountConfig" . | indent 8 }}
        - --v=2
        {{- if semverCompare "< 1.16" .Values.kubernetesVersion }}
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
        {{- end }}
        livenessProbe:
          httpGet:
            scheme: HTTPS
            {{- if semverCompare ">= 1.16" .Values.kubernetesVersion }}
            path: /livez
            {{- else }}
            path: /healthz
            {{- end }}
            port: {{ required ".securePort is required" .Values.securePort }}
            httpHeaders:
            - name: Authorization
              value: Bearer {{ .Values.probeCredentials }}
          successThreshold: 1
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            scheme: HTTPS
            {{- if semverCompare ">= 1.16" .Values.kubernetesVersion }}
            path: /readyz
            {{- else }}
            path: /healthz
            {{- end }}
            port: {{ required ".securePort is required" .Values.securePort }}
            httpHeaders:
            - name: Authorization
              value: Bearer {{ .Values.probeCredentials }}
          successThreshold: 1
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 15
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        ports:
        - name: https
          containerPort: {{ required ".securePort is required" .Values.securePort }}
          protocol: TCP
        {{- if .Values.apiServerResources }}
        resources:
{{ toYaml .Values.apiServerResources | indent 10 }}
        {{- end }}
        volumeMounts:
        {{- if .Values.reversedVPN.enabled }}
        - name: kube-apiserver-http-proxy
          mountPath: /etc/srv/kubernetes/envoy
        - name: egress-selection-config
          mountPath: /etc/kubernetes/egress
        {{- end }}
        {{- if .Values.konnectivityTunnel.enabled }}
        - name: egress-selection-config
          mountPath: /etc/kubernetes/egress
        {{- if .Values.sni.enabled }}
        - name: konnectivity-server-client-tls
          mountPath: /etc/srv/kubernetes/konnectivity-server-client-tls
        {{- else }}
        - name: konnectivity-uds
          mountPath: /etc/srv/kubernetes/konnectivity-server
          readOnly: false
        {{- end }}
        {{- end }}
        - name: audit-policy-config
          mountPath: /etc/kubernetes/audit
        - name: ca
          mountPath: /srv/kubernetes/ca
        - name: ca-etcd
          mountPath: /srv/kubernetes/etcd/ca
        - name: ca-front-proxy
          mountPath: /srv/kubernetes/ca-front-proxy
        - name: etcd-client-tls
          mountPath: /srv/kubernetes/etcd/client
        - name: kube-apiserver
          mountPath: /srv/kubernetes/apiserver
        - name: service-account-key
          mountPath: /srv/kubernetes/service-account-key
        {{- if .Values.enableBasicAuthentication }}
        - name: kube-apiserver-basic-auth
          mountPath: /srv/kubernetes/auth
        {{- end }}
        - name: static-token
          mountPath: /srv/kubernetes/token
        - name: kube-apiserver-kubelet
          mountPath: /srv/kubernetes/apiserver-kubelet
        - name: kube-aggregator
          mountPath: /srv/kubernetes/aggregator
        {{- if .Values.oidcConfig.caBundle }}
        - name: kube-apiserver-oidc-cabundle
          mountPath: /srv/kubernetes/oidc
        {{- end }}
        {{- if .Values.serviceAccountConfig }}
        {{- if .Values.serviceAccountConfig.signingKey }}
        - name: kube-apiserver-service-account-signing-key
          mountPath: /srv/kubernetes/service-account-signing-key
        {{- end }}
        {{- end }}
        - name: kube-apiserver-admission-config
          mountPath: {{ include "kube-apiserver.admissionPluginConfigFileDir" . }}
        {{- if .Values.enableEtcdEncryption }}
        - name: etcd-encryption-secret
          mountPath: /etc/kubernetes/etcd-encryption-secret
          readOnly: true
        {{- end }}
        {{- if semverCompare ">= 1.17" .Values.kubernetesVersion }}
        # locations are taken from
        # https://github.com/golang/go/blob/1bb247a469e306c57a5e0eaba788efb8b3b1acef/src/crypto/x509/root_linux.go#L7-L15
        # we cannot be sure on which Node OS the Seed Cluster is running so, it's safer to mount them all
          {{- if .Values.mountHostCADirectories.enabled }}
        - name: fedora-rhel6-openelec-cabundle
          mountPath: /etc/pki/tls
          readOnly: true
        - name: centos-rhel7-cabundle
          mountPath: /etc/pki/ca-trust/extracted/pem
          readOnly: true
        - name: etc-ssl
          mountPath: /etc/ssl
          readOnly: true
        - name: usr-share-cacerts
          mountPath: /usr/share/ca-certificates
          readOnly: true
          {{- else }}
        - name: debian-family-cabundle
          mountPath: /etc/ssl/certs/ca-certificates.crt
          readOnly: true
        - name: fedora-rhel6-cabundle
          mountPath: /etc/pki/tls/certs/ca-bundle.crt
          readOnly: true
        - name: opensuse-cabundle
          mountPath: /etc/ssl/ca-bundle.pem
          readOnly: true
        - name: openelec-cabundle
          mountPath: /etc/pki/tls/cacert.pem
          readOnly: true
        - name: centos-rhel7-cabundle
          mountPath: /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
          readOnly: true
        - name:  alpine-linux-cabundle
          mountPath: /etc/ssl/cert.pem
          readOnly: true
          {{- end }}
        {{- end }}
      {{- if .Values.sni.podMutatorEnabled }}
      - name: apiserver-proxy-pod-mutator
        image: {{ index .Values.images "apiserver-proxy-pod-webhook" }}
        args:
        - --apiserver-fqdn={{ .Values.sni.apiserverFQDN }}
        - --host=localhost
        - --cert-dir=/srv/kubernetes/apiserver
        - --cert-name=kube-apiserver.crt
        - --key-name=kube-apiserver.key
        - --port=9443
        resources:
{{ toYaml .Values.podMutatorResources | indent 10 }}
        volumeMounts:
        - name: kube-apiserver
          mountPath: /srv/kubernetes/apiserver
      {{- end }}
      {{- if and .Values.konnectivityTunnel.enabled (not .Values.sni.enabled ) }}
      - name: konnectivity-server
        image: {{ index .Values.images "konnectivity-server" }}
        command:
        - /replica-reloader
        args:
        - --namespace={{ .Release.Namespace }}
        - --deployment-name=kube-apiserver
        - --jitter=10s
        - --jitter-factor=5
        - --v=2
        - --
        - /proxy-server
        - --uds-name=/etc/srv/kubernetes/konnectivity-server/konnectivity-server.socket
        - --logtostderr=true
        - --cluster-cert=/certs/konnectivity-server/konnectivity-server.crt
        - --cluster-key=/certs/konnectivity-server/konnectivity-server.key
        - --agent-namespace={{ .Values.konnectivityTunnel.agentNamespace }}
        - --agent-service-account=konnectivity-agent
        - --kubeconfig=/etc/srv/kubernetes/konnectivity-server-kubeconfig/kubeconfig
        - --authentication-audience=system:konnectivity-server
        - --keepalive-time=1h
        - --log-file-max-size=0
        - --delete-existing-uds-file=true
        - --mode=http-connect
        # the server port should always be 0 when using UDS
        - --server-port=0
        - --agent-port={{ .Values.konnectivityTunnel.agentPort }}
        - --admin-port={{ .Values.konnectivityTunnel.adminPort }}
        - --health-port={{ .Values.konnectivityTunnel.healthPort }}
        - --v=2
        # the last argument should be server-count - the reloader injects the actual count after it
        - --server-count
        resources:
{{ toYaml .Values.konnectivityTunnelResources | indent 10 }}
        livenessProbe:
          httpGet:
            scheme: HTTP
            host: 127.0.0.1
            port: {{ .Values.konnectivityTunnel.healthPort }}
            path: /healthz
          initialDelaySeconds: 30
          timeoutSeconds: 60
        ports:
        - name: agentport
          containerPort: {{ .Values.konnectivityTunnel.agentPort }}
        - name: adminport
          containerPort: {{ .Values.konnectivityTunnel.adminPort }}
          hostPort: {{ .Values.konnectivityTunnel.adminPort }}
        - name: healthport
          containerPort: {{ .Values.konnectivityTunnel.healthPort }}
          hostPort: {{ .Values.konnectivityTunnel.healthPort }}
        volumeMounts:
        - name: konnectivity-server-certs
          mountPath: /certs/konnectivity-server
          readOnly: true
        - name: konnectivity-server-kubeconfig
          mountPath: /etc/srv/kubernetes/konnectivity-server-kubeconfig
        - name: konnectivity-uds
          mountPath: /etc/srv/kubernetes/konnectivity-server
          readOnly: false
      {{- else if and (not .Values.konnectivityTunnel.enabled) (not .Values.reversedVPN.enabled) }}
      - name: vpn-seed
        image: {{ index .Values.images "vpn-seed" }}
        imagePullPolicy: IfNotPresent
        env:
        - name: MAIN_VPN_SEED
          value: "true"
        - name: OPENVPN_PORT
          value: "4314"
        - name: APISERVER_AUTH_MODE
          value: client-cert
        - name: APISERVER_AUTH_MODE_CLIENT_CERT_CA
          value: /srv/secrets/vpn-seed/ca.crt
        - name: APISERVER_AUTH_MODE_CLIENT_CERT_CRT
          value: /srv/secrets/vpn-seed/tls.crt
        - name: APISERVER_AUTH_MODE_CLIENT_CERT_KEY
          value: /srv/secrets/vpn-seed/tls.key
        - name: SERVICE_NETWORK
          value: {{ .Values.shootNetworks.services }}
        - name: POD_NETWORK
          value: {{ .Values.shootNetworks.pods }}
        {{- if .Values.shootNetworks.nodes }}
        - name: NODE_NETWORK
          value: {{ .Values.shootNetworks.nodes }}
        {{- end }}
        {{- if .Values.vpnSeedResources }}
        resources:
{{ toYaml .Values.vpnSeedResources | indent 10 }}
        {{- end }}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /srv/secrets/vpn-seed
          name: vpn-seed
        - mountPath: /srv/secrets/tlsauth
          name: vpn-seed-tlsauth
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
      - name: audit-policy-config
        configMap:
          name: audit-policy-config
      - name: ca
        secret:
          secretName: ca
      - name: ca-etcd
        secret:
          secretName: ca-etcd
      - name: ca-front-proxy
        secret:
          secretName: ca-front-proxy
      - name: kube-apiserver
        secret:
          secretName: kube-apiserver
      - name: etcd-client-tls
        secret:
          secretName: etcd-client-tls
      - name: service-account-key
        secret:
          secretName: service-account-key
      {{- if .Values.reversedVPN.enabled }}
      - name: kube-apiserver-http-proxy
        secret:
          secretName: kube-apiserver-http-proxy
      {{- end }}
      {{- if .Values.enableBasicAuthentication }}
      - name: kube-apiserver-basic-auth
        secret:
          secretName: kube-apiserver-basic-auth
      {{- end }}
      - name: static-token
        secret:
          secretName: static-token
      - name: kube-apiserver-kubelet
        secret:
          secretName: kube-apiserver-kubelet
      - name: kube-aggregator
        secret:
          secretName: kube-aggregator
      {{- if .Values.oidcConfig.caBundle }}
      - name: kube-apiserver-oidc-cabundle
        secret:
          secretName: kube-apiserver-oidc-cabundle
      {{- end }}
      {{- if .Values.serviceAccountConfig }}
      {{- if .Values.serviceAccountConfig.signingKey }}
      - name: kube-apiserver-service-account-signing-key
        secret:
          secretName: kube-apiserver-service-account-signing-key
      {{- end }}
      {{- end }}
      - name: kube-apiserver-admission-config
        configMap:
          name: kube-apiserver-admission-config
      {{- if .Values.konnectivityTunnel.enabled }}
      - name: egress-selection-config
        configMap:
          name: kube-apiserver-egress-selector-configuration
      {{- if .Values.sni.enabled }}
      - name: konnectivity-server-client-tls
        secret:
          secretName: konnectivity-server-client-tls
      {{- else }}
      - name: konnectivity-server-certs
        secret:
          secretName: konnectivity-server
      - name: konnectivity-server-kubeconfig
        secret:
          secretName: konnectivity-server-kubeconfig
      - name: konnectivity-uds
        emptyDir: {}
      {{- end }}
      {{- else if .Values.reversedVPN.enabled }}
      - name: egress-selection-config
        configMap:
          name: kube-apiserver-egress-selector-configuration
      {{- else }}
      - name: vpn-seed
        secret:
          secretName: vpn-seed
      - name: vpn-seed-tlsauth
        secret:
          secretName: vpn-seed-tlsauth
      {{- end }}
      {{- if .Values.enableEtcdEncryption }}
      - name: etcd-encryption-secret
        secret:
          defaultMode: 420
          secretName: etcd-encryption-secret
      {{- end }}
      {{- if semverCompare ">= 1.17" .Values.kubernetesVersion }}
      # locations are taken from
      # https://github.com/golang/go/blob/1bb247a469e306c57a5e0eaba788efb8b3b1acef/src/crypto/x509/root_linux.go#L7-L15
      # we cannot be sure on which Node OS the Seed Cluster is running so, it's safer to mount them all
        {{- if .Values.mountHostCADirectories.enabled }}
      - hostPath:
          path: /etc/pki/tls
          type: "DirectoryOrCreate"
        name: fedora-rhel6-openelec-cabundle
      - hostPath:
          path: /etc/pki/ca-trust/extracted/pem
          type: "DirectoryOrCreate"
        name: centos-rhel7-cabundle
      - hostPath:
          path: /etc/ssl
          type: "DirectoryOrCreate"
        name: etc-ssl
      - hostPath:
          path: /usr/share/ca-certificates
          type: "DirectoryOrCreate"
        name: usr-share-cacerts
        {{- else }}
      - name: debian-family-cabundle
        hostPath:
          path: /etc/ssl/certs/ca-certificates.crt
      - name: fedora-rhel6-cabundle
        hostPath:
          path: /etc/pki/tls/certs/ca-bundle.crt
      - name: opensuse-cabundle
        hostPath:
          path: /etc/ssl/ca-bundle.pem
      - name: openelec-cabundle
        hostPath:
          path: /etc/pki/tls/cacert.pem
      - name: centos-rhel7-cabundle
        hostPath:
          path: /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
      - name: alpine-linux-cabundle
        hostPath:
          path: /etc/ssl/cert.pem
        {{- end }}
      {{- end }}
