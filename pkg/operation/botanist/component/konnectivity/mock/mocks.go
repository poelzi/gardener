// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gardener/gardener/pkg/operation/botanist/component/konnectivity (interfaces: KonnectivityServer)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	konnectivity "github.com/gardener/gardener/pkg/operation/botanist/component/konnectivity"
	gomock "github.com/golang/mock/gomock"
)

// MockKonnectivityServer is a mock of KonnectivityServer interface.
type MockKonnectivityServer struct {
	ctrl     *gomock.Controller
	recorder *MockKonnectivityServerMockRecorder
}

// MockKonnectivityServerMockRecorder is the mock recorder for MockKonnectivityServer.
type MockKonnectivityServerMockRecorder struct {
	mock *MockKonnectivityServer
}

// NewMockKonnectivityServer creates a new mock instance.
func NewMockKonnectivityServer(ctrl *gomock.Controller) *MockKonnectivityServer {
	mock := &MockKonnectivityServer{ctrl: ctrl}
	mock.recorder = &MockKonnectivityServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKonnectivityServer) EXPECT() *MockKonnectivityServerMockRecorder {
	return m.recorder
}

// Deploy mocks base method.
func (m *MockKonnectivityServer) Deploy(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Deploy", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Deploy indicates an expected call of Deploy.
func (mr *MockKonnectivityServerMockRecorder) Deploy(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Deploy", reflect.TypeOf((*MockKonnectivityServer)(nil).Deploy), arg0)
}

// Destroy mocks base method.
func (m *MockKonnectivityServer) Destroy(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Destroy", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Destroy indicates an expected call of Destroy.
func (mr *MockKonnectivityServerMockRecorder) Destroy(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Destroy", reflect.TypeOf((*MockKonnectivityServer)(nil).Destroy), arg0)
}

// SetSecrets mocks base method.
func (m *MockKonnectivityServer) SetSecrets(arg0 konnectivity.ServerSecrets) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetSecrets", arg0)
}

// SetSecrets indicates an expected call of SetSecrets.
func (mr *MockKonnectivityServerMockRecorder) SetSecrets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSecrets", reflect.TypeOf((*MockKonnectivityServer)(nil).SetSecrets), arg0)
}

// Wait mocks base method.
func (m *MockKonnectivityServer) Wait(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Wait", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Wait indicates an expected call of Wait.
func (mr *MockKonnectivityServerMockRecorder) Wait(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Wait", reflect.TypeOf((*MockKonnectivityServer)(nil).Wait), arg0)
}

// WaitCleanup mocks base method.
func (m *MockKonnectivityServer) WaitCleanup(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitCleanup", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// WaitCleanup indicates an expected call of WaitCleanup.
func (mr *MockKonnectivityServerMockRecorder) WaitCleanup(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitCleanup", reflect.TypeOf((*MockKonnectivityServer)(nil).WaitCleanup), arg0)
}
